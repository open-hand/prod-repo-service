## 实例运行数量
replicaCount: 1

## 设置默认的 image、imageTag 和 imagePullPolicy。
image:
  repository: registry.cn-shanghai.aliyuncs.com/hzero-hzero/rducm
  tag: ~
  pullPolicy: IfNotPresent

## Deployment 更新策略
deploymentUpdate:
  type: RollingUpdate
  maxUnavailable: 0
  maxSurge: 100%

## Pod 优先级设置
## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
##
priorityClassName: ""

## Pod 节点分配
## ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}
tolerations: []
affinity: {}

## 给 Pod 附加的 annotations
podAnnotations: {}

## ## Pod 附加的 labels
podLabels: {}


## 初始化配置至配置服务及初始化本服务数据库
preJob:
  timeout: 1200
  image: registry.cn-shanghai.aliyuncs.com/c7n/dbtool:0.7.1
  preInitDB:
    # 是否初始化本服务数据库
    enabled: true
    datasource:
      # 本服务数据库相关信息
      url: jdbc:mysql://localhost:3306/?useUnicode=true&characterEncoding=utf-8&useSSL=false&useInformationSchema=true&remarks=true&serverTimezone=Asia/Shanghai
      username: choerodon
      password: 123456
      driver: com.mysql.jdbc.Driver
    datasources:
      # 多数据源初始化
      platform:
        url: jdbc:mysql://localhost:3307/?useUnicode=true&characterEncoding=utf-8&useSSL=false&useInformationSchema=true&remarks=true&serverTimezone=Asia/Shanghai
        username: username
        password: password
        driver: com.mysql.jdbc.Driver

## 实例运行时的环境变量
env:
  open:
    # 本实例服务端口
    SERVER_PORT: 7144
    # 本实例管理端口
    MANAGEMENT_SERVER_PORT: 7145

    # 是否启用配置中心
    SPRING_CLOUD_CONFIG_ENABLED: false
    # 配置中心地址
    SPRING_CLOUD_CONFIG_URI: http://register-server:8000

    # 注册服务地址
    EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://register-server:8080
    SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/hrds_prod_repo?useUnicode=true&characterEncoding=utf-8&useSSL=false&useInformationSchema=true&remarks=true&serverTimezone=Asia/Shanghai
    SPRING_DATASOURCE_USERNAME: choerodon
    SPRING_DATASOURCE_PASSWORD: 123456
    # redis
    SPRING_REDIS_HOST: localhost
    SPRING_REDIS_PORT: 6379
    SPRING_REDIS_DATABASE: 0
    #harbor地址、用户名、密码
    HARBOR_BASE_URL: https://registry.com
    HARBOR_USER_NAME: admin
    HARBOR_PASSWORD: admin
    #平台服务数据库地址、迁移数据-关联默认仓库使用
    HARBOR_INIT_DEFAULT_REPO_URL: jdbc:mysql://localhost:3306/hzero_platform?useUnicode=true&characterEncoding=utf-8&useSSL=false
    HARBOR_INIT_DEFAULT_REPO_USERNAME:  choerodon
    HARBOR_INIT_DEFAULT_REPO_PASSWORD: 123456
    #devops服务数据库地址、迁移数据-自定义仓库使用
    HARBOR_INIT_CUSTOM_REPO_URL: jdbc:mysql://localhost:3306/devops_service?useUnicode=true&characterEncoding=utf-8&useSSL=false
    HARBOR_INIT_CUSTOM_REPO_USERNAME: choerodon
    HARBOR_INIT_CUSTOM_REPO_PASSWORD: 123456
    #制品库密码，加密密钥（直接使用该文件的内容）
    DES_ENCRYPT_DES_KEY: uhNT5moFYsw1xYEQTaSkpUSXJLa7VcerZiXYOwiRo1kLRIkX4kw2UPlIt5cbHtXxIsJbeipgX5HerWoGeCpG
    DES_ENCRYPT_DES_IV: HH123456

    ##系统默认nexus服务地址
    NEXUS_DEFAULT_BASE_URL: https://localhost
    #系统默认nexus服务，超级管理员用户
    NEXUS_DEFAULT_USER_NAME: admin
    #系统默认nexus服务，超级管理员用户密码
    NEXUS_DEFAULT_PASSWORD: admin
    #系统默认nexus服务，是否启用仓库级的匿名访问控制。 1:启用  0:不启用
    NEXUS_DEFAULT_ENABLE_ANONYMOUS_FLAG: 0
    #系统默认nexus服务，启用仓库级的匿名访问控制时需要配置该值(即enableAnonymousFlag==1时)。 nexus服务开启全局匿名访问时，配置的用户
    NEXUS_DEFAULT_ANONYMOUS_USER: test
    #系统默认nexus服务，启用仓库级的匿名访问控制时需要配置该值(即enableAnonymousFlag==1时)。 nexus服务开启全局匿名访问时，配置的用户对应的角色
    NEXUS_DEFAULT_ANONYMOUS_ROLE: test
    NEXUS_PROXY_BASE: https://localhost

## Liveness 和 Readiness 探针相关配置
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
livenessProbe:
  initialDelaySeconds: 180
  periodSeconds: 30
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3
readinessProbe:
  initialDelaySeconds: 5
  periodSeconds: 15
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3

## 资源请求和限制相关配置
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  limits:
    # cpu: 100m
    memory: 2Gi
  requests:
    # cpu: 100m
    memory: 2Gi

## 插件相关配置
plugins:
  # skywalking agent 镜像地址
  skywalkingAgentImage: registry.cn-shanghai.aliyuncs.com/c7n/skywalking-agent:6.5.0

## service 相关设置
## ref: http://kubernetes.io/docs/user-guide/services/
##
service:
  # 是否启用 service 暴露本服务
  enabled: true
  # Service 名称
  name: prod-repo-service
  # Service 类型
  type: ClusterIP
  # 指定 service 的 clusterIP
  clusterIP: ~
  # 端口设置
  ports:
    # 服务端口
    http:
      port: 7144
      nodePort: 30178
    # 管理端口
    actuator:
      port: 7145
      nodePort: 30179
  ## externalIPs 设置
  # externalIPs:
  #   - externalIp1
  annotations: {}
    # prometheus.io/scrape: 'true'
  # prometheus.io/path: '/actuator/prometheus'
  # prometheus.io/port: '8070'

## 指标收集
metrics:
  # 收集应用的指标数据路径
  path: /actuator/prometheus
  # 性能指标应用分组
  group: spring-boot

## 日志收集
logs:
  enabled: false
  # 日志收集格式
  parser: spring-boot
